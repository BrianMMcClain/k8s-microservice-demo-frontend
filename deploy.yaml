# MySQL
--- 
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None

---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: db
        ports:
        - containerPort: 3306
          name: mysql
      #   volumeMounts:
      #   - name: mysql-persistent-storage
      #     mountPath: /var/lib/mysql
      # volumes:
      # - name: mysql-persistent-storage
      #   persistentVolumeClaim:
      #     claimName: mysql-pv-claim
          
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - image: postgres:12.3
        name: postgres
        env:
          # Use secret in real usage
        - name: POSTGRES_DB
          value: db
        - name: POSTGRES_USER
          value: root
        - name: POSTGRES_PASSWORD
          value: password
        ports:
        - containerPort: 5432
          name: mysql

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-microservice-demo-user
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-microservice-demo-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: k8s-microservice-demo-user
  namespace: default

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-microservices-demo-customize
data:
  application.properties: |-
    bean.message=Kubernetes Microservice Demo
    bean.bgcolor=white

# Customize Service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-microservice-demo-customize
  labels:
    app: k8s-microservice-demo-customize
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-microservice-demo-customize
  template:
    metadata:
      labels:
        app: k8s-microservice-demo-customize
    spec:
      serviceAccountName: k8s-microservice-demo-user
      containers:
      - name: k8s-microservice-demo-customize
        image: brianmmcclain/k8s-microservice-demo-customize:0.0.1-SNAPSHOT
        imagePullPolicy: Always
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: k8s-microservice-demo-customize-service
spec:
  selector:
    app: k8s-microservice-demo-customize
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

# Backend Service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-microservice-demo-backend
  labels:
    app: k8s-microservice-demo-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-microservice-demo-backend
  template:
    metadata:
      labels:
        app: k8s-microservice-demo-backend
    spec:
      containers:
      - name: k8s-microservice-demo-backend
        image: brianmmcclain/k8s-microservice-demo-backend:0.0.1-SNAPSHOT
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: mysql
        imagePullPolicy: Always
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: k8s-microservice-demo-backend-service
spec:
  selector:
    app: k8s-microservice-demo-backend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

# Frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-microservice-demo-frontend
  labels:
    app: k8s-microservice-demo-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-microservice-demo-frontend
  template:
    metadata:
      labels:
        app: k8s-microservice-demo-frontend
    spec:
      serviceAccountName: k8s-microservice-demo-user
      containers:
      - name: k8s-microservice-demo-frontend
        image: brianmmcclain/k8s-microservice-demo-frontend:0.0.1-SNAPSHOT
        env:
        - name: spring_profiles_active
          value: testprofile
        imagePullPolicy: Always
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: k8s-microservice-demo-frontend-service
spec:
  selector:
    app: k8s-microservice-demo-frontend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080